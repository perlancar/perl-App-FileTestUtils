#!perl

use strict;
use warnings;

use App::FileTestUtils;

# AUTHORITY
# DATE
# DIST
# VERSION

App::FileTestUtils::do_script("dir_has_subdirs");

# ABSTRACT: Test that a directory has subdirs
# PODNAME:

=head1 SYNOPSIS

On the command-line, you feed a filename as argument to the script and it will
exit 0 if the filename exists and is a directory that has subdirs:

 % dir-has-subdirs "foo" && echo "foo/ has subdirs"

With grep mode (C<-g>), you pass one or more filenames in argument or stdin to
the script and it will print the directories that have subdirs (or those that
are not, if you specify C<-v> or C<--invert-match>).


=head1 DESCRIPTION

This is CLI for L<File::Util::Test>'s L<dir_empty|File::Util::Test/dir_has_subdirs>.


=head1 SEE ALSO

L<File::Util::Test>

L<dir-has-files>
