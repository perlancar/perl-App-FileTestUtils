#!perl

use strict;
use warnings;

use App::FileTestUtils;

# AUTHORITY
# DATE
# DIST
# VERSION

App::FileTestUtils::do_script("dir_has_dot_files");

# ABSTRACT: Test that a directory has dot files
# PODNAME:

=head1 SYNOPSIS

On the command-line, you feed a filename as argument to the script and it will
exit 0 if the filename exists and is a directory that has dot files:

 % dir-has-dot-files "foo" && echo "foo/ has dot files"

With grep mode (C<-g>), you pass one or more filenames in argument or stdin to
the script and it will print the directories that have dot files (or those that
are not, if you specify C<-v> or C<--invert-match>).


=head1 DESCRIPTION

This is CLI for L<File::MoreUtil>'s
L<dir_has_dot_files|File::MoreUtil/dir_has_dot_files>. It will exit 0 if
argument is a directory and has plain, dot (a.k.a. hidden) files. A plain file
is a regular/non-special file. A symlink to a plain file counts as a plain file.
Non-plain files include named pipes, Unix sockets, and block/character special
files.


=head1 SEE ALSO

L<File::MoreUtil>

L<dir-has-files>

L<dir-has-non-dot-files>
